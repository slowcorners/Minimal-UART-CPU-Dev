; In-situ FLASH ROM (OS) programmer for the Minimal UART CPU (FLASH Edition)
; written by Carsten Herting (slu4) 2021
; Usage: Load 4KB ROM image into memory area $e000-$efff and run this program.
; Following an input promt, the image will be written to
; $0000-$0fff and the system will restart at $0000.

*=$8000           LDI <string STS -3		; put LSB of string address on the stack
      					  LDI >string STS -4		; put MSB of string address on the stack
		      			  JPS OS_PrintText
                  WIN
                  CPI 'y' BNE $0010

                  CLW target                                  ; set target to $0000 ROM start
                  LDI <romimage STA source+0                  ; source = ROM image in RAM
                  LDI >romimage STA source+1

                  LDI $aa STA $5555                           ; issue FLASH ERASE COMMAND
                  LDI $55 STA $2aaa
                  LDI $80 STA $5555
                  LDI $aa STA $5555
                  LDI $55 STA $2aaa
                  LDI $30 STA $0000                           ; erase FLASH block 0 (aka ROM area)
erase_loop:       LDA $0000 LSL BCC erase_loop                ; wait while 8th bit remains LOW

write_loop:       LDI $aa STA $5555                           ; INIT FLASH WRITE PROGRAM
                  LDI $55 STA $2aaa
                  LDI $a0 STA $5555
                  LDR source STR target			  						    ; write into FLASH
                  NOP NOP NOP                                 ; wait 26µs (byte prog time max. 20µs)
                  CPR target BNE writeerror                   ; RM vom FLASH okay?
                    INW source INW target                     ; increase both pointers to next location
                    LDA target+1 CPI $10 BCC write_loop
                      JPA $0000                               ; SUCCESS => jump to new ROM
writeerror:       LDI '?' OUT NOP NOP NOP NOP NOP NOP NOP NOP ; FAILURE => try to jump to ROM 'OS_LineStart' anyway
                    JPA $0010

OS_PrintText: 	  LDS -1 STA source+0
            		  LDS -2 STA source+1 	         	            ; get LSB and MSB
  printloop:  	  LDR source CPI 0	    	                    ; 15 Print routine
								  BEQ printend          		                  ; 5(6) string zuende?
            	    	OUT NOP NOP NOP NOP NOP NOP NOP NOP       ; 122
        		      	INW source         		                    ; 12 zeige auf das nächste Zeichen
     		          	JPA printloop                             ; 6
  printend:	  	  RTS

string: 	        "Are you sure (y/n)?", 10, 0

#end

source:           $ffff           ; pointers used to copy the ROM image to the FLASH area
target:           $ffff           ; will start at $0000

*=$e000           ; upload the new ROM image here
romimage:

#begin
*=$8000
